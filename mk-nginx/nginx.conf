upstream mk_gateway{

    server 192.168.248.249:8040;

    # 如果nginx有安装ngx_http_upstream_check_module模块，则使用如下配置项，替换上面的配置项(server 127.0.0.1:9101) Begin
    #least_conn;
    #server 127.0.0.1:9101 fail_timeout=0  weight=100;
    #check interval=3000 timeout=1000 fall=3 rise=3 type=http;
    #check_http_send "GET /hello HTTP/1.0\r\n\r\n";
    #check_http_expect_alive http_2xx http_3xx;
    # 如果nginx有安装ngx_http_upstream_check_module模块，则使用如下配置项，替换上面的配置项(server 127.0.0.1:9101) End
    #注：127.0.0.1为网关gateway-server的IP地址, 9100为网关gateway-server监听的端口号，如有需要请根据实际环镜信息进行更改
}

server {
      listen       8088;
      server_name  localhost;

      large_client_header_buffers 4 16k;
      client_max_body_size 1024m;
      gzip on;
      gzip_buffers 32 4K;
      gzip_min_length 1k;
      gzip_comp_level 4;
      gzip_types text/plain text/css text/javascript application/javascript application/x-javascript application/xml application/x-httpd-php application/json image/jpeg image/gif image/png;
      gzip_disable "MSIE [1-6]\.";
      gzip_vary on;

      error_page  404 403 /404.html;

      #网址根路径，需要请根据实际环镜信息进行更改
      root /usr/local/nginx/html/;

      #安全加固配置: 关闭显示nginx版本 Begin
      server_tokens off;
      #安全加固配置: 关闭显示nginx版本 End

      #安全加固配置: 防止http动词篡改的认证旁路 Begin
      if ($request_method !~ ^(GET|POST|HEAD|TRACE|OPTION)$ ) {
          return 501;
      }
      #安全加固配置: 防止http动词篡改的认证旁路 End

      #安全加固配置: 新增必要头部信息 Begin
      add_header X-Frame-Options SAMEORIGIN;
      #add_header Content-Security-Policy "default-src 'self'";
      add_header X-XSS-Protection "1; mode=block";
      #add_header X-Content-Type-Options nosniff;
      #安全加固配置: 新增必要头部信息 End

      #安全加固配置: 配置CSRF（跨站请示伪造攻击)防御 Begin
      # java.landray.com.cn为mk系统的访问域名(此处不需要配置http或者https)
      # 如MK为IP访问的方式(http://ip:端口）则就配置为ip:端口
        #valid_referers none server_names java.landray.com.cn;
        #if ($invalid_referer) {
        #   return 403;
        #}
      #安全加固配置: 配置CSRF防御（跨站伪造攻击) End

        #安全加固配置: 防止更新时将升级包临时放在web/tmp目录下忘记移走 Begin
        location = /web/tmp/ {
                error_page 403 /404;
        }
        #安全加固配置: 防止更新在将升级包临时放在web/tmp目录下 Begin

        location = / {
          rewrite ^(.*)  http://$http_host/web/;
        }

        location ~ ^/(openapi|bdata|authapi|webservice|data)/ {

            proxy_pass http://mk_gateway;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Scheme $scheme;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            break;
        }

        location ^~ /web/ {
          proxy_cache_revalidate on;
          add_header Expires 6h;

          if ($request_filename ~* .*\.(?:json)$) {
          #安全加固配置: 新增必要头部信息 Begin
          add_header X-Frame-Options SAMEORIGIN;
          #add_header Content-Security-Policy "default-src 'self'";
          add_header X-XSS-Protection "1; mode=block";
          #add_header X-Content-Type-Options nosniff;
          #安全加固配置: 新增必要头部信息 End
            add_header Cache-Control "no-cache";
          }
          if ($request_filename ~* .*\.(?:html)$) {
            add_header Cache-Control "no-cache";
          }
          if_modified_since before;
          break;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/nginx/html/;
        }

        # 如果nginx有安装ngx_http_upstream_check_module模块，则添加如下配置，没有则不需要此配置项 Begin
        #location /appstatus {
        #    check_status;
        #    access_log   off;
        #}
        # 如果nginx有安装ngx_http_upstream_check_module模块，则添加如下配置，没有则不需要此配置项 End

        # nginx向上层代码提供的健康检查接口: /hello
        location /hello {
            return 200 "hello";
        }

      # extended.json文件处理
      #location /web/runtime/extended.json {
      #    if ( !-e $request_filename ){
      #        return 200 "{'hello':'您好!'}";
      #    }
      #}
}